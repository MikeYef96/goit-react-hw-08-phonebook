{"version":3,"sources":["components/Container/Container.jsx","components/PrivateRoute.jsx","components/PublicRoute.jsx","components/HeaderMUI/NavigationMUI.jsx","components/HeaderMUI/AuthNavMUI.jsx","components/HeaderMUI/UserMenuMUI.jsx","components/HeaderMUI/HeaderMUI.jsx","components/Footer/BottomAppBar.jsx","App.jsx","redux/store.js","index.js","redux/auth/auth-operations.js","redux/auth/auth-slice.js","redux/auth/auth-selectors.js","redux/contacts/contacts-actions.js","redux/contacts/contacts-operations.js","redux/contacts/contacts-reducers.js","redux/contacts/contacts-selectors.js"],"names":["Container","children","CssBaseline","PrivateRoute","redirectTo","routeProps","isLoggedIn","useSelector","authSelectors","getIsLoggedIn","to","PublicRoute","restricted","shouldRedirect","styles","link","display","textDecoration","padding","fontWeight","fontSize","color","activeLink","NavigationMUI","exact","style","activeStyle","AuthNavMUI","container","alignItems","name","marginRight","button","textTransform","UserMenuMUI","dispatch","useDispatch","getUsername","Button","type","endIcon","onClick","authOperations","logOut","HeaderMUI","AppBar","position","Toolbar","Grid","justify","item","useStyles","makeStyles","theme","appBar","top","bottom","BottomAppBar","classes","Fragment","className","HomePage","lazy","RegisterPage","LoginPage","ContactsPage","createMuiTheme","palette","primary","main","secondary","override","css","App","isFetchingCurrentUser","getIsFetchingCurrent","useEffect","fetchCurrentUser","size","ThemeProvider","fallback","path","component","middleware","getDefaultMiddleware","serializableCheck","ignoredActions","FLUSH","REHYDRATE","PAUSE","PERSIST","PURGE","REGISTER","logger","authPersistConfig","key","storage","whitelist","store","configureStore","reducer","auth","persistReducer","authReducer","contacts","contactsReducer","devTools","process","persistor","persistStore","ReactDOM","render","StrictMode","loading","document","getElementById","axios","defaults","baseURL","token","headers","common","Authorization","register","createAsyncThunk","credentials","a","rejectWithValue","post","data","message","logIn","_","thunkAPI","state","getState","persistedToken","get","authSlice","createSlice","initialState","user","email","extraReducers","fulfilled","action","payload","pending","rejected","fetchContactsRequest","createAction","fetchContactsSuccess","fetchContactsError","addContactRequest","addContactSuccess","addContactError","deleteContactRequest","deleteContactSuccess","deleteContactError","changeFilter","contactsOperations","fetchContacts","addContact","number","contact","deleteContact","id","delete","items","createReducer","filter","combineReducers","getContacts","getFilter","contactsSelectors","getVisibleContacts","createSelector","normalizedFilter","toLowerCase","text","includes","getFilteredContacts"],"mappings":"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","file":"static/js/main.a21f415e.chunk.js","sourcesContent":["import { CssBaseline } from '@material-ui/core';\r\n\r\nexport default function Container({ children }) {\r\n  return (\r\n    <div>\r\n      {children}\r\n      <CssBaseline />\r\n    </div>\r\n  );\r\n}\r\n","import { useSelector } from 'react-redux';\r\nimport { Route, Redirect } from 'react-router-dom';\r\nimport { authSelectors } from '../redux/auth';\r\n\r\nexport default function PrivateRoute({\r\n  children,\r\n  redirectTo = '/',\r\n  ...routeProps\r\n}) {\r\n  const isLoggedIn = useSelector(authSelectors.getIsLoggedIn);\r\n  return (\r\n    <Route {...routeProps}>\r\n      {isLoggedIn ? children : <Redirect to={redirectTo} />}\r\n    </Route>\r\n  );\r\n}\r\n","import { useSelector } from 'react-redux';\r\nimport { Route, Redirect } from 'react-router-dom';\r\nimport { authSelectors } from '../redux/auth';\r\n\r\nexport default function PublicRoute({\r\n  children,\r\n  restricted = false,\r\n  redirectTo = '/',\r\n  ...routeProps\r\n}) {\r\n  const isLoggedIn = useSelector(authSelectors.getIsLoggedIn);\r\n  const shouldRedirect = isLoggedIn && restricted;\r\n  return (\r\n    <Route {...routeProps}>\r\n      {shouldRedirect ? <Redirect to={redirectTo} /> : children}\r\n    </Route>\r\n  );\r\n}\r\n","import React from 'react';\r\nimport { NavLink } from 'react-router-dom';\r\n\r\nconst styles = {\r\n  link: {\r\n    display: 'inline-block',\r\n    textDecoration: 'none',\r\n    padding: 12,\r\n    fontWeight: 900,\r\n    fontSize: 18,\r\n    color: '#6f7ff7',\r\n  },\r\n  activeLink: {\r\n    color: '#ffffff',\r\n    fontSize: '25px',\r\n  },\r\n};\r\n\r\nexport default function NavigationMUI() {\r\n  return (\r\n    <nav>\r\n      <NavLink to=\"/\" exact style={styles.link} activeStyle={styles.activeLink}>\r\n        Home\r\n      </NavLink>\r\n\r\n      <NavLink\r\n        to=\"/contacts\"\r\n        exact\r\n        style={styles.link}\r\n        activeStyle={styles.activeLink}\r\n      >\r\n        Contacts\r\n      </NavLink>\r\n    </nav>\r\n  );\r\n}\r\n","import React from 'react';\r\nimport { NavLink } from 'react-router-dom';\r\n\r\nconst styles = {\r\n  link: {\r\n    display: 'inline-block',\r\n    textDecoration: 'none',\r\n    padding: 12,\r\n    fontWeight: 900,\r\n    fontSize: 18,\r\n    color: '#6f7ff7',\r\n  },\r\n  activeLink: {\r\n    color: '#ffffff',\r\n    fontSize: '25px',\r\n  },\r\n};\r\n\r\nexport default function AuthNavMUI() {\r\n  return (\r\n    <>\r\n      <NavLink\r\n        to=\"/register\"\r\n        exact\r\n        style={styles.link}\r\n        activeStyle={styles.activeLink}\r\n      >\r\n        Sign up\r\n      </NavLink>\r\n\r\n      <NavLink\r\n        to=\"/login\"\r\n        exact\r\n        style={styles.link}\r\n        activeStyle={styles.activeLink}\r\n      >\r\n        Login\r\n      </NavLink>\r\n    </>\r\n  );\r\n}\r\n","import React from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { authSelectors, authOperations } from 'redux/auth';\r\nimport Button from '@material-ui/core/Button';\r\nimport PowerSettingsNewIcon from '@material-ui/icons/PowerSettingsNew';\r\n\r\nconst styles = {\r\n  container: {\r\n    display: 'flex',\r\n    alignItems: 'baseline',\r\n    color: '#6f7ff7',\r\n  },\r\n  name: {\r\n    fontWeight: 700,\r\n    fontSize: 18,\r\n    marginRight: 12,\r\n  },\r\n  button: {\r\n    color: '#6f7ff7',\r\n    fontWeight: 700,\r\n    fontSize: 18,\r\n    textTransform: 'capitalize',\r\n  },\r\n};\r\n\r\nexport default function UserMenuMUI() {\r\n  const dispatch = useDispatch();\r\n  const name = useSelector(authSelectors.getUsername);\r\n  const logOutHandler = () => dispatch(authOperations.logOut());\r\n\r\n  return (\r\n    <div style={styles.container}>\r\n      <span style={styles.name}>Welcome, {name}</span>\r\n\r\n      <Button\r\n        type=\"button\"\r\n        style={styles.button}\r\n        endIcon={<PowerSettingsNewIcon fontSize=\"small\" />}\r\n        onClick={logOutHandler}\r\n      >\r\n        <span>Sign out</span>\r\n      </Button>\r\n    </div>\r\n  );\r\n}\r\n","import React from 'react';\r\nimport { useSelector } from 'react-redux';\r\nimport { AppBar, Toolbar, Grid } from '@material-ui/core';\r\nimport Navigation from './NavigationMUI';\r\nimport AuthNav from './AuthNavMUI';\r\nimport UserMenu from './UserMenuMUI';\r\nimport { authSelectors } from 'redux/auth';\r\n\r\nexport default function HeaderMUI() {\r\n  const isLoggedIn = useSelector(authSelectors.getIsLoggedIn);\r\n\r\n  return (\r\n    <AppBar position=\"static\">\r\n      <Toolbar>\r\n        <Grid container justify=\"space-around\" alignItems=\"center\">\r\n          <Grid item>\r\n            <Navigation />\r\n          </Grid>\r\n\r\n          {isLoggedIn ? (\r\n            <Grid item>\r\n              <UserMenu />\r\n            </Grid>\r\n          ) : (\r\n            <Grid item>\r\n              <AuthNav />\r\n            </Grid>\r\n          )}\r\n        </Grid>\r\n      </Toolbar>\r\n    </AppBar>\r\n  );\r\n}\r\n","import React from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport AppBar from '@material-ui/core/AppBar';\r\nimport CssBaseline from '@material-ui/core/CssBaseline';\r\nimport Toolbar from '@material-ui/core/Toolbar';\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  appBar: {\r\n    top: 'auto',\r\n    bottom: 0,\r\n  },\r\n}));\r\n\r\nexport default function BottomAppBar() {\r\n  const classes = useStyles();\r\n\r\n  return (\r\n    <React.Fragment>\r\n      <CssBaseline />\r\n\r\n      <AppBar color=\"primary\" className={classes.appBar}>\r\n        <Toolbar></Toolbar>\r\n      </AppBar>\r\n    </React.Fragment>\r\n  );\r\n}\r\n","import { Switch } from 'react-router-dom';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { useEffect } from 'react';\r\nimport { Suspense, lazy } from 'react';\r\nimport Container from './components/Container';\r\nimport PrivateRoute from './components/PrivateRoute';\r\nimport PublicRoute from './components/PublicRoute';\r\nimport { authOperations, authSelectors } from './redux/auth';\r\nimport HeaderMUI from './components/HeaderMUI/HeaderMUI';\r\nimport BottomAppBar from './components/Footer/BottomAppBar';\r\nimport { createMuiTheme, ThemeProvider } from '@material-ui/core';\r\nimport { css } from '@emotion/react';\r\nimport ClockLoader from 'react-spinners/ClockLoader';\r\n\r\nconst HomePage = lazy(() => import('./pages/HomePage'));\r\nconst RegisterPage = lazy(() => import('./pages/RegisterPage'));\r\nconst LoginPage = lazy(() => import('./pages/LoginPage'));\r\nconst ContactsPage = lazy(() => import('./pages/ContactsPage'));\r\n\r\nconst theme = createMuiTheme({\r\n  palette: {\r\n    primary: {\r\n      main: '#011211',\r\n    },\r\n    secondary: {\r\n      main: '#faa346',\r\n    },\r\n  },\r\n});\r\n\r\nconst override = css`\r\n  display: block;\r\n  margin: 50px auto;\r\n  border-color: red;\r\n`;\r\n\r\nexport default function App() {\r\n  const dispatch = useDispatch();\r\n  const isFetchingCurrentUser = useSelector(authSelectors.getIsFetchingCurrent);\r\n\r\n  useEffect(() => {\r\n    dispatch(authOperations.fetchCurrentUser());\r\n  }, [dispatch]);\r\n\r\n  return (\r\n    <Container>\r\n      {isFetchingCurrentUser ? (\r\n        <ClockLoader css={override} color={'#e8834d'} size={150} />\r\n      ) : (\r\n        <ThemeProvider theme={theme}>\r\n          <HeaderMUI />\r\n          <Switch>\r\n            <Suspense\r\n              fallback={\r\n                <ClockLoader css={override} color={'#e8834d'} size={150} />\r\n              }\r\n            >\r\n              <PublicRoute exact path=\"/\" component={HomePage} />\r\n              <PublicRoute\r\n                path=\"/register\"\r\n                component={RegisterPage}\r\n                redirectTo=\"/\"\r\n                restricted\r\n              />\r\n              <PublicRoute\r\n                path=\"/login\"\r\n                component={LoginPage}\r\n                redirectTo=\"/\"\r\n                restricted\r\n              />\r\n              <PrivateRoute\r\n                path=\"/contacts\"\r\n                component={ContactsPage}\r\n                redirectTo=\"/login\"\r\n              />\r\n            </Suspense>\r\n          </Switch>\r\n          <BottomAppBar />\r\n        </ThemeProvider>\r\n      )}\r\n    </Container>\r\n  );\r\n}\r\n","import { configureStore, getDefaultMiddleware } from '@reduxjs/toolkit';\r\nimport {\r\n  persistStore,\r\n  persistReducer,\r\n  FLUSH,\r\n  REHYDRATE,\r\n  PAUSE,\r\n  PERSIST,\r\n  PURGE,\r\n  REGISTER,\r\n} from 'redux-persist';\r\nimport logger from 'redux-logger';\r\nimport storage from 'redux-persist/lib/storage';\r\nimport { contactsReducer } from './contacts';\r\nimport { authReducer } from './auth';\r\n\r\nconst middleware = [\r\n  ...getDefaultMiddleware({\r\n    serializableCheck: {\r\n      ignoredActions: [FLUSH, REHYDRATE, PAUSE, PERSIST, PURGE, REGISTER],\r\n    },\r\n  }),\r\n  logger,\r\n];\r\n\r\nconst authPersistConfig = {\r\n  key: 'auth',\r\n  storage,\r\n  whitelist: ['token'],\r\n};\r\n\r\nexport const store = configureStore({\r\n  reducer: {\r\n    auth: persistReducer(authPersistConfig, authReducer),\r\n    contacts: contactsReducer,\r\n  },\r\n  middleware,\r\n  devTools: process.env.NODE_ENV === 'development',\r\n});\r\n\r\nexport const persistor = persistStore(store);\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport { BrowserRouter } from 'react-router-dom';\r\nimport { Provider } from 'react-redux';\r\nimport { PersistGate } from 'redux-persist/integration/react';\r\nimport './index.css';\r\nimport App from './App';\r\nimport { store, persistor } from './redux/store';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <Provider store={store}>\r\n      <PersistGate loading={null} persistor={persistor}>\r\n        <BrowserRouter>\r\n          <App />\r\n        </BrowserRouter>\r\n      </PersistGate>\r\n    </Provider>\r\n  </React.StrictMode>,\r\n  document.getElementById('root'),\r\n);\r\n","import axios from 'axios';\r\nimport { createAsyncThunk } from '@reduxjs/toolkit';\r\n\r\naxios.defaults.baseURL = 'https://goit-phonebook-api.herokuapp.com';\r\n\r\nconst token = {\r\n  set(token) {\r\n    axios.defaults.headers.common.Authorization = `Bearer ${token}`;\r\n  },\r\n  unset() {\r\n    axios.defaults.headers.common.Authorization = '';\r\n  },\r\n};\r\n\r\nconst register = createAsyncThunk(\r\n  'auth/register',\r\n  async (credentials, { rejectWithValue }) => {\r\n    try {\r\n      const { data } = await axios.post('/users/signup', credentials);\r\n      token.set(data.token);\r\n      return data;\r\n    } catch (error) {\r\n      return rejectWithValue(error.message);\r\n    }\r\n  },\r\n);\r\n\r\nconst logIn = createAsyncThunk(\r\n  'auth/login',\r\n  async (credentials, { rejectWithValue }) => {\r\n    try {\r\n      const { data } = await axios.post('/users/login', credentials);\r\n      token.set(data.token);\r\n      return data;\r\n    } catch (error) {\r\n      return rejectWithValue(error.message);\r\n    }\r\n  },\r\n);\r\n\r\nconst logOut = createAsyncThunk(\r\n  'auth/logout',\r\n  async (_, { rejectWithValue }) => {\r\n    try {\r\n      await axios.post('/users/logout');\r\n      token.unset();\r\n    } catch (error) {\r\n      return rejectWithValue(error.message);\r\n    }\r\n  },\r\n);\r\n\r\nconst fetchCurrentUser = createAsyncThunk(\r\n  'auth/refresh',\r\n  async (_, thunkAPI) => {\r\n    const state = thunkAPI.getState();\r\n    const persistedToken = state.auth.token;\r\n\r\n    if (persistedToken === null) {\r\n      return thunkAPI.rejectWithValue('need to log in');\r\n    }\r\n\r\n    token.set(persistedToken);\r\n    try {\r\n      const { data } = await axios.get('/users/current');\r\n      return data;\r\n    } catch (error) {\r\n      thunkAPI.rejectWithValue(error.message);\r\n    }\r\n  },\r\n);\r\n\r\nconst authOperations = {\r\n  register,\r\n  logOut,\r\n  logIn,\r\n  fetchCurrentUser,\r\n};\r\nexport default authOperations;\r\n","import { createSlice } from '@reduxjs/toolkit';\r\nimport authOperations from './auth-operations';\r\n\r\nconst initialState = {\r\n  user: { name: null, email: null },\r\n  token: null,\r\n  isLoggedIn: false,\r\n  isFetchingCurrentUser: false,\r\n};\r\n\r\nconst authSlice = createSlice({\r\n  name: 'auth',\r\n  initialState,\r\n  extraReducers: {\r\n    [authOperations.register.fulfilled](state, action) {\r\n      state.user = action.payload.user;\r\n      state.token = action.payload.token;\r\n      state.isLoggedIn = true;\r\n    },\r\n    [authOperations.logIn.fulfilled](state, action) {\r\n      state.user = action.payload.user;\r\n      state.token = action.payload.token;\r\n      state.isLoggedIn = true;\r\n    },\r\n    [authOperations.logOut.fulfilled](state, action) {\r\n      state.user = { name: null, email: null };\r\n      state.token = null;\r\n      state.isLoggedIn = false;\r\n    },\r\n    [authOperations.fetchCurrentUser.pending](state) {\r\n      state.isFetchingCurrentUser = true;\r\n    },\r\n    [authOperations.fetchCurrentUser.fulfilled](state, action) {\r\n      state.user = action.payload;\r\n      state.isLoggedIn = true;\r\n      state.isFetchingCurrentUser = false;\r\n    },\r\n    [authOperations.fetchCurrentUser.rejected](state) {\r\n      state.isFetchingCurrentUser = false;\r\n    },\r\n  },\r\n});\r\n\r\nexport default authSlice.reducer;\r\n","const getIsLoggedIn = state => state.auth.isLoggedIn;\r\nconst getUsername = state => state.auth.user.name;\r\nconst getIsFetchingCurrent = state => state.auth.isFetchingCurrentUser;\r\n\r\nconst authSelectors = {\r\n  getIsLoggedIn,\r\n  getUsername,\r\n  getIsFetchingCurrent,\r\n};\r\nexport default authSelectors;\r\n","import { createAction } from '@reduxjs/toolkit';\r\n\r\nexport const fetchContactsRequest = createAction(\r\n  'contacts/fetchContactsRequest',\r\n);\r\nexport const fetchContactsSuccess = createAction(\r\n  'contacts/fetchContactsSuccess',\r\n);\r\nexport const fetchContactsError = createAction('contacts/fetchContactsError');\r\n\r\nexport const addContactRequest = createAction('contacts/addContactRequest');\r\nexport const addContactSuccess = createAction('contacts/addContactSuccess');\r\nexport const addContactError = createAction('contacts/addContactError');\r\n\r\nexport const deleteContactRequest = createAction(\r\n  'contacts/deleteContactRequest',\r\n);\r\nexport const deleteContactSuccess = createAction(\r\n  'contacts/deleteContactSuccess',\r\n);\r\nexport const deleteContactError = createAction('contacts/deleteContactError');\r\n\r\nexport const changeFilter = createAction('contacts/changeFilter');\r\n","import axios from 'axios';\r\nimport {\r\n  fetchContactsRequest,\r\n  fetchContactsSuccess,\r\n  fetchContactsError,\r\n  addContactRequest,\r\n  addContactSuccess,\r\n  addContactError,\r\n  deleteContactRequest,\r\n  deleteContactSuccess,\r\n  deleteContactError,\r\n} from './contacts-actions';\r\n\r\nconst fetchContacts = () => async dispatch => {\r\n  dispatch(fetchContactsRequest());\r\n  try {\r\n    const { data } = await axios.get('/contacts');\r\n    dispatch(fetchContactsSuccess(data));\r\n  } catch (error) {\r\n    dispatch(fetchContactsError(error));\r\n  }\r\n};\r\n\r\nconst addContact = (name, number) => async dispatch => {\r\n  const contact = {\r\n    name,\r\n    number,\r\n  };\r\n\r\n  dispatch(addContactRequest());\r\n\r\n  try {\r\n    const { data } = await axios.post('/contacts', contact);\r\n    dispatch(addContactSuccess(data));\r\n  } catch (error) {\r\n    dispatch(addContactError(error));\r\n  }\r\n};\r\n\r\nconst deleteContact = id => async dispatch => {\r\n  dispatch(deleteContactRequest());\r\n  try {\r\n    await axios.delete(`/contacts/${id}`);\r\n    dispatch(deleteContactSuccess(id));\r\n  } catch (error) {\r\n    dispatch(deleteContactError(error));\r\n  }\r\n};\r\n\r\nconst contactsOperations = {\r\n  fetchContacts,\r\n  addContact,\r\n  deleteContact,\r\n};\r\n\r\nexport default contactsOperations;\r\n","import { combineReducers } from 'redux';\r\nimport { createReducer } from '@reduxjs/toolkit';\r\nimport {\r\n  addContactSuccess,\r\n  deleteContactSuccess,\r\n  changeFilter,\r\n  fetchContactsSuccess,\r\n} from './contacts-actions';\r\n\r\nconst items = createReducer([], {\r\n  [fetchContactsSuccess]: (_, { payload }) => payload,\r\n  [addContactSuccess]: (state, { payload }) => [...state, payload],\r\n  [deleteContactSuccess]: (state, { payload }) =>\r\n    state.filter(({ id }) => id !== payload),\r\n});\r\n\r\nconst filter = createReducer('', {\r\n  [changeFilter]: (_, { payload }) => payload,\r\n});\r\n\r\nexport default combineReducers({\r\n  items,\r\n  filter,\r\n});\r\n","import { createSelector } from '@reduxjs/toolkit';\r\n\r\nconst getContacts = state => state.contacts.items;\r\nconst getFilter = state => state.contacts.filter;\r\n\r\nconst getVisibleContacts = createSelector(\r\n  [getContacts, getFilter],\r\n  (contacts, filter) => {\r\n    const getFilteredContacts = contacts => {\r\n      const normalizedFilter = filter.toLowerCase();\r\n      return contacts.filter(text =>\r\n        text.name.toLowerCase().includes(normalizedFilter),\r\n      );\r\n    };\r\n\r\n    return getFilteredContacts(contacts);\r\n  },\r\n);\r\n\r\nconst contactsSelectors = {\r\n  getContacts,\r\n  getFilter,\r\n  getVisibleContacts,\r\n};\r\n\r\nexport default contactsSelectors;\r\n"],"sourceRoot":""}