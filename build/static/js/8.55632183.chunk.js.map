{"version":3,"sources":["lib/FormContainer.jsx","lib/Form.jsx","lib/Input.jsx","lib/PrimaryButton.jsx","pages/RegisterPage.jsx"],"names":["useStyles","makeStyles","theme","root","marginTop","spacing","display","flexDirection","alignItems","marginBottom","FormContainer","children","props","styles","className","component","maxWidth","width","Form","noValidate","autoComplete","Input","forwardRef","ref","variant","margin","inputRef","fullWidth","color","background","boxShadow","PrimaryButton","type","schema","yup","shape","name","required","email","password","RegisterPage","dispatch","useDispatch","useForm","mode","resolver","yupResolver","register","handleSubmit","errors","onSubmit","data","authOperations","label","error","helperText","message"],"mappings":"0LAIMA,EAAYC,aAAW,SAAAC,GAAK,MAAK,CACrCC,KAAM,CACJC,UAAWF,EAAMG,QAAQ,GACzBC,QAAS,OACTC,cAAe,SACfC,WAAY,SACZC,aAAc,YAmBHC,IAfO,SAAC,GAA4B,IAA1BC,EAAyB,EAAzBA,SAAaC,EAAY,4BAC1CC,EAASb,IAEf,OACE,cAAC,IAAD,yBACEc,UAAWD,EAAOV,KAClBY,UAAU,OACVC,SAAS,MACLJ,GAJN,aAMGD,O,4ECrBDX,EAAYC,aAAW,SAAAC,GAAK,MAAK,CACrCC,KAAM,CACJc,MAAO,OACPb,UAAWF,EAAMG,QAAQ,QAada,IATF,SAAC,GAA4B,IAA1BP,EAAyB,EAAzBA,SAAaC,EAAY,4BACjCC,EAASb,IACf,OACE,8CAAMc,UAAWD,EAAOV,KAAMgB,YAAU,GAAKP,GAA7C,IAAoDQ,aAAa,MAAjE,SACGT,O,oECXDU,EAAQC,sBAAW,SAACV,EAAOW,GAC/B,OACE,cAAC,IAAD,aACEC,QAAQ,WACRC,OAAO,SACPC,SAAUH,EACVI,WAAS,EACTC,MAAM,aACFhB,OAIKS,O,qFCXTrB,EAAYC,aAAW,SAAAC,GAAK,MAAK,CACrCC,KAAM,CACJsB,OAAQvB,EAAMG,QAAQ,EAAG,EAAG,GAC5BwB,WAAY,mDACZC,UAAW,6CAoBAC,IAhBO,SAAC,GAA4B,IAA1BpB,EAAyB,EAAzBA,SAAaC,EAAY,4BAC1CC,EAASb,IAEf,OACE,cAAC,IAAD,yBACEgC,KAAK,SACLL,WAAS,EACTH,QAAQ,YACRV,UAAWD,EAAOV,MACdS,GALN,aAOGD,O,iCCvBP,yIAUMsB,EAASC,MAAaC,MAAM,CAChCC,KAAMF,MAAaG,SAAS,kCAC5BC,MAAOJ,MAEJI,MAAM,oCACND,SAAS,6BACZE,SAAUL,MAAaG,SAAS,kCAGnB,SAASG,IAAgB,IAAD,MAC/BC,EAAWC,cADoB,EAEMC,YAAQ,CACjDC,KAAM,SACNC,SAAUC,YAAYb,KAFhBc,EAF6B,EAE7BA,SAAUC,EAFmB,EAEnBA,aAAcC,EAFK,EAELA,OAShC,OACE,cAAC,IAAD,UACE,eAAC,IAAD,CAAMC,SAAUF,GANK,SAAAG,GACvBV,EAASW,IAAeL,SAASI,OAK/B,UACE,cAAC,IAAD,CACEnB,KAAK,OACLI,KAAK,OACLiB,MAAM,OACN9B,IAAKwB,EACLO,QAASL,EAAOb,KAChBmB,WAAU,OAAEN,QAAF,IAAEA,GAAF,UAAEA,EAAQb,YAAV,aAAE,EAAcoB,UAG5B,cAAC,IAAD,CACExB,KAAK,QACLI,KAAK,QACLiB,MAAM,QACN9B,IAAKwB,EACLO,QAASL,EAAOX,MAChBiB,WAAU,OAAEN,QAAF,IAAEA,GAAF,UAAEA,EAAQX,aAAV,aAAE,EAAekB,UAG7B,cAAC,IAAD,CACExB,KAAK,WACLI,KAAK,WACLiB,MAAM,WACN9B,IAAKwB,EACLO,QAASL,EAAOV,SAChBgB,WAAU,OAAEN,QAAF,IAAEA,GAAF,UAAEA,EAAQV,gBAAV,aAAE,EAAkBiB,UAGhC,cAAC,IAAD,CAAexB,KAAK,SAASJ,MAAM,UAAnC","file":"static/js/8.55632183.chunk.js","sourcesContent":["import React from 'react';\r\nimport Container from '@material-ui/core/Container';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  root: {\r\n    marginTop: theme.spacing(2),\r\n    display: 'flex',\r\n    flexDirection: 'column',\r\n    alignItems: 'center',\r\n    marginBottom: 'auto',\r\n  },\r\n}));\r\n\r\nconst FormContainer = ({ children, ...props }) => {\r\n  const styles = useStyles();\r\n\r\n  return (\r\n    <Container\r\n      className={styles.root}\r\n      component=\"main\"\r\n      maxWidth=\"xs\"\r\n      {...props}\r\n    >\r\n      {children}\r\n    </Container>\r\n  );\r\n};\r\n\r\nexport default FormContainer;\r\n","import React from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  root: {\r\n    width: '100%',\r\n    marginTop: theme.spacing(1),\r\n  },\r\n}));\r\n\r\nconst Form = ({ children, ...props }) => {\r\n  const styles = useStyles();\r\n  return (\r\n    <form className={styles.root} noValidate {...props} autoComplete=\"off\">\r\n      {children}\r\n    </form>\r\n  );\r\n};\r\n\r\nexport default Form;\r\n","import { TextField } from '@material-ui/core';\r\nimport React, { forwardRef } from 'react';\r\n\r\nconst Input = forwardRef((props, ref) => {\r\n  return (\r\n    <TextField\r\n      variant=\"outlined\"\r\n      margin=\"normal\"\r\n      inputRef={ref}\r\n      fullWidth\r\n      color=\"secondary\"\r\n      {...props}\r\n    />\r\n  );\r\n});\r\nexport default Input;\r\n","import React from 'react';\r\nimport Button from '@material-ui/core/Button';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  root: {\r\n    margin: theme.spacing(3, 0, 2),\r\n    background: 'linear-gradient(45deg, #8fff9e 15%, #6f7ff7 80%)',\r\n    boxShadow: '0 3px 5px 2px rgba(255, 105, 135, .3)',\r\n  },\r\n}));\r\n\r\nconst PrimaryButton = ({ children, ...props }) => {\r\n  const styles = useStyles();\r\n\r\n  return (\r\n    <Button\r\n      type=\"submit\"\r\n      fullWidth\r\n      variant=\"contained\"\r\n      className={styles.root}\r\n      {...props}\r\n    >\r\n      {children}\r\n    </Button>\r\n  );\r\n};\r\n\r\nexport default PrimaryButton;\r\n","import { useDispatch } from 'react-redux';\r\nimport { authOperations } from 'redux/auth';\r\nimport { useForm } from 'react-hook-form';\r\nimport FormContainer from '../lib/FormContainer';\r\nimport Form from '../lib/Form';\r\nimport Input from '../lib/Input';\r\nimport PrimaryButton from '../lib/PrimaryButton';\r\nimport { yupResolver } from '@hookform/resolvers';\r\nimport * as yup from 'yup';\r\n\r\nconst schema = yup.object().shape({\r\n  name: yup.string().required('First name is a required field'),\r\n  email: yup\r\n    .string()\r\n    .email('Email should have correct format')\r\n    .required('Email is a required field'),\r\n  password: yup.string().required('Password is a required field'),\r\n});\r\n\r\nexport default function RegisterPage() {\r\n  const dispatch = useDispatch();\r\n  const { register, handleSubmit, errors } = useForm({\r\n    mode: 'onBlur',\r\n    resolver: yupResolver(schema),\r\n  });\r\n\r\n  const handleFormSubmit = data => {\r\n    dispatch(authOperations.register(data));\r\n  };\r\n\r\n  return (\r\n    <FormContainer>\r\n      <Form onSubmit={handleSubmit(handleFormSubmit)}>\r\n        <Input\r\n          type=\"text\"\r\n          name=\"name\"\r\n          label=\"Name\"\r\n          ref={register}\r\n          error={!!errors.name}\r\n          helperText={errors?.name?.message}\r\n        />\r\n\r\n        <Input\r\n          type=\"email\"\r\n          name=\"email\"\r\n          label=\"Email\"\r\n          ref={register}\r\n          error={!!errors.email}\r\n          helperText={errors?.email?.message}\r\n        />\r\n\r\n        <Input\r\n          type=\"password\"\r\n          name=\"password\"\r\n          label=\"Password\"\r\n          ref={register}\r\n          error={!!errors.password}\r\n          helperText={errors?.password?.message}\r\n        />\r\n\r\n        <PrimaryButton type=\"submit\" color=\"primary\">\r\n          Sign up\r\n        </PrimaryButton>\r\n      </Form>\r\n    </FormContainer>\r\n  );\r\n}\r\n"],"sourceRoot":""}