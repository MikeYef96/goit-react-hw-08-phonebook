{"version":3,"sources":["lib/FormContainer.jsx","lib/Form.jsx","lib/Input.jsx","lib/PrimaryButton.jsx","pages/RegisterPage.jsx"],"names":["useStyles","makeStyles","theme","root","marginTop","spacing","display","flexDirection","alignItems","marginBottom","FormContainer","children","props","styles","className","component","maxWidth","width","Form","noValidate","autoComplete","Input","forwardRef","ref","variant","margin","inputRef","fullWidth","color","background","boxShadow","PrimaryButton","type","schema","yup","shape","name","required","email","password","RegisterPage","dispatch","useDispatch","useForm","mode","resolver","yupResolver","register","handleSubmit","errors","onSubmit","data","authOperations","label","error","helperText","message"],"mappings":"oMAIMA,EAAYC,aAAW,SAAAC,GAAK,MAAK,CACrCC,KAAM,CACJC,UAAWF,EAAMG,QAAQ,GACzBC,QAAS,OACTC,cAAe,SACfC,WAAY,SACZC,aAAc,YAmBHC,IAfO,SAAC,GAA4B,IAA1BC,EAAyB,EAAzBA,SAAaC,EAAY,4BAC1CC,EAASb,IAEf,OACE,cAAC,IAAD,yBACEc,UAAWD,EAAOV,KAClBY,UAAU,OACVC,SAAS,MACLJ,GAJN,aAMGD,O,4ECrBDX,EAAYC,aAAW,SAAAC,GAAK,MAAK,CACrCC,KAAM,CACJc,MAAO,OACPb,UAAWF,EAAMG,QAAQ,QAada,IATF,SAAC,GAA4B,IAA1BP,EAAyB,EAAzBA,SAAaC,EAAY,4BACjCC,EAASb,IACf,OACE,8CAAMc,UAAWD,EAAOV,KAAMgB,YAAU,GAAKP,GAA7C,IAAoDQ,aAAa,MAAjE,SACGT,O,oECXDU,EAAQC,sBAAW,SAACV,EAAOW,GAC/B,OACE,cAAC,IAAD,aACEC,QAAQ,WACRC,OAAO,SACPC,SAAUH,EACVI,WAAS,EACTC,MAAM,aACFhB,OAIKS,O,qFCXTrB,EAAYC,aAAW,SAAAC,GAAK,MAAK,CACrCC,KAAM,CACJsB,OAAQvB,EAAMG,QAAQ,EAAG,EAAG,GAC5BwB,WAAY,mDACZC,UAAW,6CAoBAC,IAhBO,SAAC,GAA4B,IAA1BpB,EAAyB,EAAzBA,SAAaC,EAAY,4BAC1CC,EAASb,IAEf,OACE,cAAC,IAAD,yBACEgC,KAAK,SACLL,WAAS,EACTH,QAAQ,YACRV,UAAWD,EAAOV,MACdS,GALN,aAOGD,O,iCCvBP,yIAUMsB,EAASC,MAAaC,MAAM,CAChCC,KAAMF,MAAaG,SAAS,kCAC5BC,MAAOJ,MAEJI,MAAM,oCACND,SAAS,6BACZE,SAAUL,MAAaG,SAAS,kCAGnB,SAASG,IAAgB,IAAD,MAC/BC,EAAWC,cADoB,EAEMC,YAAQ,CACjDC,KAAM,SACNC,SAAUC,YAAYb,KAFhBc,EAF6B,EAE7BA,SAAUC,EAFmB,EAEnBA,aAAcC,EAFK,EAELA,OAShC,OACE,cAAC,IAAD,UACE,eAAC,IAAD,CAAMC,SAAUF,GANK,SAAAG,GACvBV,EAASW,IAAeL,SAASI,OAK/B,UACE,cAAC,IAAD,CACEnB,KAAK,OACLI,KAAK,OACLiB,MAAM,OACN9B,IAAKwB,EACLO,QAASL,EAAOb,KAChBmB,WAAU,OAAEN,QAAF,IAAEA,GAAF,UAAEA,EAAQb,YAAV,aAAE,EAAcoB,UAG5B,cAAC,IAAD,CACExB,KAAK,QACLI,KAAK,QACLiB,MAAM,QACN9B,IAAKwB,EACLO,QAASL,EAAOX,MAChBiB,WAAU,OAAEN,QAAF,IAAEA,GAAF,UAAEA,EAAQX,aAAV,aAAE,EAAekB,UAG7B,cAAC,IAAD,CACExB,KAAK,WACLI,KAAK,WACLiB,MAAM,WACN9B,IAAKwB,EACLO,QAASL,EAAOV,SAChBgB,WAAU,OAAEN,QAAF,IAAEA,GAAF,UAAEA,EAAQV,gBAAV,aAAE,EAAkBiB,UAGhC,cAAC,IAAD,CAAexB,KAAK,SAASJ,MAAM,UAAnC","file":"static/js/8.251fbce9.chunk.js","sourcesContent":["import React from 'react';\nimport Container from '@material-ui/core/Container';\nimport { makeStyles } from '@material-ui/core/styles';\n\nconst useStyles = makeStyles(theme => ({\n  root: {\n    marginTop: theme.spacing(2),\n    display: 'flex',\n    flexDirection: 'column',\n    alignItems: 'center',\n    marginBottom: 'auto',\n  },\n}));\n\nconst FormContainer = ({ children, ...props }) => {\n  const styles = useStyles();\n\n  return (\n    <Container\n      className={styles.root}\n      component=\"main\"\n      maxWidth=\"xs\"\n      {...props}\n    >\n      {children}\n    </Container>\n  );\n};\n\nexport default FormContainer;\n","import React from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\n\nconst useStyles = makeStyles(theme => ({\n  root: {\n    width: '100%',\n    marginTop: theme.spacing(1),\n  },\n}));\n\nconst Form = ({ children, ...props }) => {\n  const styles = useStyles();\n  return (\n    <form className={styles.root} noValidate {...props} autoComplete=\"off\">\n      {children}\n    </form>\n  );\n};\n\nexport default Form;\n","import { TextField } from '@material-ui/core';\nimport React, { forwardRef } from 'react';\n\nconst Input = forwardRef((props, ref) => {\n  return (\n    <TextField\n      variant=\"outlined\"\n      margin=\"normal\"\n      inputRef={ref}\n      fullWidth\n      color=\"secondary\"\n      {...props}\n    />\n  );\n});\nexport default Input;\n","import React from 'react';\nimport Button from '@material-ui/core/Button';\nimport { makeStyles } from '@material-ui/core/styles';\n\nconst useStyles = makeStyles(theme => ({\n  root: {\n    margin: theme.spacing(3, 0, 2),\n    background: 'linear-gradient(45deg, #8fff9e 15%, #6f7ff7 80%)',\n    boxShadow: '0 3px 5px 2px rgba(255, 105, 135, .3)',\n  },\n}));\n\nconst PrimaryButton = ({ children, ...props }) => {\n  const styles = useStyles();\n\n  return (\n    <Button\n      type=\"submit\"\n      fullWidth\n      variant=\"contained\"\n      className={styles.root}\n      {...props}\n    >\n      {children}\n    </Button>\n  );\n};\n\nexport default PrimaryButton;\n","import { useDispatch } from 'react-redux';\nimport { authOperations } from 'redux/auth';\nimport { useForm } from 'react-hook-form';\nimport FormContainer from '../lib/FormContainer';\nimport Form from '../lib/Form';\nimport Input from '../lib/Input';\nimport PrimaryButton from '../lib/PrimaryButton';\nimport { yupResolver } from '@hookform/resolvers';\nimport * as yup from 'yup';\n\nconst schema = yup.object().shape({\n  name: yup.string().required('First name is a required field'),\n  email: yup\n    .string()\n    .email('Email should have correct format')\n    .required('Email is a required field'),\n  password: yup.string().required('Password is a required field'),\n});\n\nexport default function RegisterPage() {\n  const dispatch = useDispatch();\n  const { register, handleSubmit, errors } = useForm({\n    mode: 'onBlur',\n    resolver: yupResolver(schema),\n  });\n\n  const handleFormSubmit = data => {\n    dispatch(authOperations.register(data));\n  };\n\n  return (\n    <FormContainer>\n      <Form onSubmit={handleSubmit(handleFormSubmit)}>\n        <Input\n          type=\"text\"\n          name=\"name\"\n          label=\"Name\"\n          ref={register}\n          error={!!errors.name}\n          helperText={errors?.name?.message}\n        />\n\n        <Input\n          type=\"email\"\n          name=\"email\"\n          label=\"Email\"\n          ref={register}\n          error={!!errors.email}\n          helperText={errors?.email?.message}\n        />\n\n        <Input\n          type=\"password\"\n          name=\"password\"\n          label=\"Password\"\n          ref={register}\n          error={!!errors.password}\n          helperText={errors?.password?.message}\n        />\n\n        <PrimaryButton type=\"submit\" color=\"primary\">\n          Registration\n        </PrimaryButton>\n      </Form>\n    </FormContainer>\n  );\n}\n"],"sourceRoot":""}