{"version":3,"sources":["lib/FormContainer.jsx","lib/Form.jsx","lib/Input.jsx","lib/PrimaryButton.jsx","pages/LoginPage.jsx"],"names":["useStyles","makeStyles","theme","root","marginTop","spacing","display","flexDirection","alignItems","marginBottom","FormContainer","children","props","styles","className","component","maxWidth","width","Form","noValidate","autoComplete","Input","forwardRef","ref","variant","margin","inputRef","fullWidth","color","background","boxShadow","PrimaryButton","type","LoginPage","dispatch","useDispatch","useState","email","setEmail","password","setPassword","handleChange","target","name","value","onSubmit","evt","preventDefault","authOperations","logIn","label","onChange"],"mappings":"0LAIMA,EAAYC,aAAW,SAAAC,GAAK,MAAK,CACrCC,KAAM,CACJC,UAAWF,EAAMG,QAAQ,GACzBC,QAAS,OACTC,cAAe,SACfC,WAAY,SACZC,aAAc,YAmBHC,IAfO,SAAC,GAA4B,IAA1BC,EAAyB,EAAzBA,SAAaC,EAAY,4BAC1CC,EAASb,IAEf,OACE,cAAC,IAAD,yBACEc,UAAWD,EAAOV,KAClBY,UAAU,OACVC,SAAS,MACLJ,GAJN,aAMGD,O,4ECrBDX,EAAYC,aAAW,SAAAC,GAAK,MAAK,CACrCC,KAAM,CACJc,MAAO,OACPb,UAAWF,EAAMG,QAAQ,QAada,IATF,SAAC,GAA4B,IAA1BP,EAAyB,EAAzBA,SAAaC,EAAY,4BACjCC,EAASb,IACf,OACE,8CAAMc,UAAWD,EAAOV,KAAMgB,YAAU,GAAKP,GAA7C,IAAoDQ,aAAa,MAAjE,SACGT,O,oECXDU,EAAQC,sBAAW,SAACV,EAAOW,GAC/B,OACE,cAAC,IAAD,aACEC,QAAQ,WACRC,OAAO,SACPC,SAAUH,EACVI,WAAS,EACTC,MAAM,aACFhB,OAIKS,O,qFCXTrB,EAAYC,aAAW,SAAAC,GAAK,MAAK,CACrCC,KAAM,CACJsB,OAAQvB,EAAMG,QAAQ,EAAG,EAAG,GAC5BwB,WAAY,mDACZC,UAAW,6CAoBAC,IAhBO,SAAC,GAA4B,IAA1BpB,EAAyB,EAAzBA,SAAaC,EAAY,4BAC1CC,EAASb,IAEf,OACE,cAAC,IAAD,yBACEgC,KAAK,SACLL,WAAS,EACTH,QAAQ,YACRV,UAAWD,EAAOV,MACdS,GALN,aAOGD,O,+JCfQ,SAASsB,IACtB,IAAMC,EAAWC,cADiB,EAERC,mBAAS,IAFD,mBAE3BC,EAF2B,KAEpBC,EAFoB,OAGFF,mBAAS,IAHP,mBAG3BG,EAH2B,KAGjBC,EAHiB,KAK5BC,EAAe,SAAC,GAAiC,IAAD,IAA9BC,OAAUC,EAAoB,EAApBA,KAAMC,EAAc,EAAdA,MACtC,OAAQD,GACN,IAAK,QACH,OAAOL,EAASM,GAClB,IAAK,WACH,OAAOJ,EAAYI,GACrB,QACE,SAWN,OACE,cAAC,IAAD,UACE,eAAC,IAAD,CAAMC,SATW,SAAAC,GACnBA,EAAIC,iBACJb,EAASc,IAAeC,MAAM,CAAEZ,QAAOE,cACvCD,EAAS,IACTE,EAAY,KAKoBpB,aAAa,MAA3C,UACE,cAAC,IAAD,CACEY,KAAK,QACLW,KAAK,QACLC,MAAOP,EACPa,MAAM,QACNC,SAAUV,IAGZ,cAAC,IAAD,CACET,KAAK,WACLW,KAAK,WACLC,MAAOL,EACPW,MAAM,WACNC,SAAUV,IAEZ,cAAC,IAAD,CAAeT,KAAK,SAASJ,MAAM,UAAnC","file":"static/js/7.15cd5680.chunk.js","sourcesContent":["import React from 'react';\r\nimport Container from '@material-ui/core/Container';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  root: {\r\n    marginTop: theme.spacing(2),\r\n    display: 'flex',\r\n    flexDirection: 'column',\r\n    alignItems: 'center',\r\n    marginBottom: 'auto',\r\n  },\r\n}));\r\n\r\nconst FormContainer = ({ children, ...props }) => {\r\n  const styles = useStyles();\r\n\r\n  return (\r\n    <Container\r\n      className={styles.root}\r\n      component=\"main\"\r\n      maxWidth=\"xs\"\r\n      {...props}\r\n    >\r\n      {children}\r\n    </Container>\r\n  );\r\n};\r\n\r\nexport default FormContainer;\r\n","import React from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  root: {\r\n    width: '100%',\r\n    marginTop: theme.spacing(1),\r\n  },\r\n}));\r\n\r\nconst Form = ({ children, ...props }) => {\r\n  const styles = useStyles();\r\n  return (\r\n    <form className={styles.root} noValidate {...props} autoComplete=\"off\">\r\n      {children}\r\n    </form>\r\n  );\r\n};\r\n\r\nexport default Form;\r\n","import { TextField } from '@material-ui/core';\r\nimport React, { forwardRef } from 'react';\r\n\r\nconst Input = forwardRef((props, ref) => {\r\n  return (\r\n    <TextField\r\n      variant=\"outlined\"\r\n      margin=\"normal\"\r\n      inputRef={ref}\r\n      fullWidth\r\n      color=\"secondary\"\r\n      {...props}\r\n    />\r\n  );\r\n});\r\nexport default Input;\r\n","import React from 'react';\r\nimport Button from '@material-ui/core/Button';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  root: {\r\n    margin: theme.spacing(3, 0, 2),\r\n    background: 'linear-gradient(45deg, #8fff9e 15%, #6f7ff7 80%)',\r\n    boxShadow: '0 3px 5px 2px rgba(255, 105, 135, .3)',\r\n  },\r\n}));\r\n\r\nconst PrimaryButton = ({ children, ...props }) => {\r\n  const styles = useStyles();\r\n\r\n  return (\r\n    <Button\r\n      type=\"submit\"\r\n      fullWidth\r\n      variant=\"contained\"\r\n      className={styles.root}\r\n      {...props}\r\n    >\r\n      {children}\r\n    </Button>\r\n  );\r\n};\r\n\r\nexport default PrimaryButton;\r\n","import { useState } from 'react';\r\nimport { useDispatch } from 'react-redux';\r\nimport { authOperations } from 'redux/auth';\r\nimport FormContainer from '../lib/FormContainer';\r\nimport Form from '../lib/Form';\r\nimport Input from '../lib/Input';\r\nimport PrimaryButton from '../lib/PrimaryButton';\r\n\r\nexport default function LoginPage() {\r\n  const dispatch = useDispatch();\r\n  const [email, setEmail] = useState('');\r\n  const [password, setPassword] = useState('');\r\n\r\n  const handleChange = ({ target: { name, value } }) => {\r\n    switch (name) {\r\n      case 'email':\r\n        return setEmail(value);\r\n      case 'password':\r\n        return setPassword(value);\r\n      default:\r\n        return;\r\n    }\r\n  };\r\n\r\n  const handleSubmit = evt => {\r\n    evt.preventDefault();\r\n    dispatch(authOperations.logIn({ email, password }));\r\n    setEmail('');\r\n    setPassword('');\r\n  };\r\n\r\n  return (\r\n    <FormContainer>\r\n      <Form onSubmit={handleSubmit} autoComplete=\"off\">\r\n        <Input\r\n          type=\"email\"\r\n          name=\"email\"\r\n          value={email}\r\n          label=\"Email\"\r\n          onChange={handleChange}\r\n        />\r\n\r\n        <Input\r\n          type=\"password\"\r\n          name=\"password\"\r\n          value={password}\r\n          label=\"Password\"\r\n          onChange={handleChange}\r\n        />\r\n        <PrimaryButton type=\"submit\" color=\"primary\">\r\n          Sign in\r\n        </PrimaryButton>\r\n      </Form>\r\n    </FormContainer>\r\n  );\r\n}\r\n"],"sourceRoot":""}