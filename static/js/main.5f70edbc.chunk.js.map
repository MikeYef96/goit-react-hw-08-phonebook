{"version":3,"sources":["components/Container/Container.jsx","components/PrivateRoute.jsx","components/PublicRoute.jsx","components/HeaderMUI/NavigationMUI.jsx","components/HeaderMUI/AuthNavMUI.jsx","components/HeaderMUI/UserMenuMUI.jsx","components/HeaderMUI/HeaderMUI.jsx","components/Footer/BottomAppBar.jsx","App.jsx","redux/store.js","index.js","redux/auth/auth-slice.js","redux/auth/auth-operations.js","redux/contacts/contacts-actions.js","redux/contacts/contacts-operations.js","redux/contacts/contacts-reducers.js","redux/contacts/contacts-selectors.js","redux/auth/auth-selectors.js"],"names":["Container","children","CssBaseline","PrivateRoute","redirectTo","routeProps","isLoggedIn","useSelector","authSelectors","getIsLoggedIn","to","PublicRoute","restricted","shouldRedirect","styles","link","display","textDecoration","padding","fontWeight","fontSize","color","activeLink","NavigationMUI","exact","style","activeStyle","AuthNavMUI","container","alignItems","name","marginRight","button","textTransform","UserMenuMUI","dispatch","useDispatch","getUsername","Button","type","endIcon","onClick","authOperations","logOut","HeaderMUI","AppBar","position","Toolbar","Grid","justify","item","useStyles","makeStyles","theme","appBar","top","bottom","BottomAppBar","classes","Fragment","className","HomePage","lazy","RegisterPage","LoginPage","ContactsPage","createMuiTheme","palette","primary","main","secondary","override","css","App","isFetchingCurrentUser","getIsFetchingCurrent","console","log","useEffect","fetchCurrentUser","size","ThemeProvider","fallback","path","component","middleware","getDefaultMiddleware","serializableCheck","ignoredActions","FLUSH","REHYDRATE","PAUSE","PERSIST","PURGE","REGISTER","logger","authPersistConfig","key","storage","whitelist","store","configureStore","reducer","auth","persistReducer","authReducer","contacts","contactsReducer","devTools","process","persistor","persistStore","ReactDOM","render","StrictMode","loading","document","getElementById","authSlice","createSlice","initialState","user","email","token","extraReducers","register","fulfilled","state","action","payload","logIn","pending","rejected","axios","defaults","baseURL","headers","common","Authorization","createAsyncThunk","credentials","a","rejectWithValue","post","data","message","_","thunkAPI","getState","persistedToken","get","fetchContactsRequest","createAction","fetchContactsSuccess","fetchContactsError","addContactRequest","addContactSuccess","addContactError","deleteContactRequest","deleteContactSuccess","deleteContactError","changeFilter","contactsOperations","fetchContacts","addContact","number","contact","deleteContact","id","delete","items","createReducer","filter","combineReducers","getContacts","getFilter","contactsSelectors","getVisibleContacts","createSelector","normalizedFilter","toLowerCase","text","includes","getFilteredContacts"],"mappings":"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","file":"static/js/main.5f70edbc.chunk.js","sourcesContent":["import { CssBaseline } from '@material-ui/core';\n\nexport default function Container({ children }) {\n  return (\n    <div>\n      {children}\n      <CssBaseline />\n    </div>\n  );\n}\n","import { useSelector } from 'react-redux';\nimport { Route, Redirect } from 'react-router-dom';\nimport { authSelectors } from '../redux/auth';\n\nexport default function PrivateRoute({\n  children,\n  redirectTo = '/',\n  ...routeProps\n}) {\n  const isLoggedIn = useSelector(authSelectors.getIsLoggedIn);\n  return (\n    <Route {...routeProps}>\n      {isLoggedIn ? children : <Redirect to={redirectTo} />}\n    </Route>\n  );\n}\n","import { useSelector } from 'react-redux';\nimport { Route, Redirect } from 'react-router-dom';\nimport { authSelectors } from '../redux/auth';\n\nexport default function PublicRoute({\n  children,\n  restricted = false,\n  redirectTo = '/',\n  ...routeProps\n}) {\n  const isLoggedIn = useSelector(authSelectors.getIsLoggedIn);\n  const shouldRedirect = isLoggedIn && restricted;\n  return (\n    <Route {...routeProps}>\n      {shouldRedirect ? <Redirect to={redirectTo} /> : children}\n    </Route>\n  );\n}\n","import React from 'react';\nimport { NavLink } from 'react-router-dom';\n\nconst styles = {\n  link: {\n    display: 'inline-block',\n    textDecoration: 'none',\n    padding: 12,\n    fontWeight: 900,\n    fontSize: 18,\n    color: '#6f7ff7',\n  },\n  activeLink: {\n    color: '#ffffff',\n    fontSize: '25px',\n  },\n};\n\nexport default function NavigationMUI() {\n  return (\n    <nav>\n      <NavLink to=\"/\" exact style={styles.link} activeStyle={styles.activeLink}>\n        Home\n      </NavLink>\n\n      <NavLink\n        to=\"/contacts\"\n        exact\n        style={styles.link}\n        activeStyle={styles.activeLink}\n      >\n        Contacts\n      </NavLink>\n    </nav>\n  );\n}\n","import React from 'react';\nimport { NavLink } from 'react-router-dom';\n\nconst styles = {\n  link: {\n    display: 'inline-block',\n    textDecoration: 'none',\n    padding: 12,\n    fontWeight: 900,\n    fontSize: 18,\n    color: '#6f7ff7',\n  },\n  activeLink: {\n    color: '#ffffff',\n    fontSize: '25px',\n  },\n};\n\nexport default function AuthNavMUI() {\n  return (\n    <>\n      <NavLink\n        to=\"/register\"\n        exact\n        style={styles.link}\n        activeStyle={styles.activeLink}\n      >\n        Registration\n      </NavLink>\n\n      <NavLink\n        to=\"/login\"\n        exact\n        style={styles.link}\n        activeStyle={styles.activeLink}\n      >\n        Login\n      </NavLink>\n    </>\n  );\n}\n","import React from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { authSelectors, authOperations } from 'redux/auth';\nimport Button from '@material-ui/core/Button';\nimport PowerSettingsNewIcon from '@material-ui/icons/PowerSettingsNew';\n\nconst styles = {\n  container: {\n    display: 'flex',\n    alignItems: 'baseline',\n    color: '#6f7ff7',\n  },\n  name: {\n    fontWeight: 700,\n    fontSize: 18,\n    marginRight: 12,\n  },\n  button: {\n    color: '#6f7ff7',\n    fontWeight: 700,\n    fontSize: 18,\n    textTransform: 'capitalize',\n  },\n};\n\nexport default function UserMenuMUI() {\n  const dispatch = useDispatch();\n  const name = useSelector(authSelectors.getUsername);\n  const logOutHandler = () => dispatch(authOperations.logOut());\n\n  return (\n    <div style={styles.container}>\n      <span style={styles.name}>Welcome, {name}</span>\n\n      <Button\n        type=\"button\"\n        style={styles.button}\n        endIcon={<PowerSettingsNewIcon fontSize=\"small\" />}\n        onClick={logOutHandler}\n      >\n        <span>Sign out</span>\n      </Button>\n    </div>\n  );\n}\n","import React from 'react';\nimport { useSelector } from 'react-redux';\nimport { AppBar, Toolbar, Grid } from '@material-ui/core';\nimport Navigation from './NavigationMUI';\nimport AuthNav from './AuthNavMUI';\nimport UserMenu from './UserMenuMUI';\nimport { authSelectors } from 'redux/auth';\n\nexport default function HeaderMUI() {\n  const isLoggedIn = useSelector(authSelectors.getIsLoggedIn);\n\n  return (\n    <AppBar position=\"static\">\n      <Toolbar>\n        <Grid container justify=\"space-around\" alignItems=\"center\">\n          <Grid item>\n            <Navigation />\n          </Grid>\n\n          {isLoggedIn ? (\n            <Grid item>\n              <UserMenu />\n            </Grid>\n          ) : (\n            <Grid item>\n              <AuthNav />\n            </Grid>\n          )}\n        </Grid>\n      </Toolbar>\n    </AppBar>\n  );\n}\n","import React from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport AppBar from '@material-ui/core/AppBar';\nimport CssBaseline from '@material-ui/core/CssBaseline';\nimport Toolbar from '@material-ui/core/Toolbar';\n\nconst useStyles = makeStyles(theme => ({\n  appBar: {\n    top: 'auto',\n    bottom: 0,\n  },\n}));\n\nexport default function BottomAppBar() {\n  const classes = useStyles();\n\n  return (\n    <React.Fragment>\n      <CssBaseline />\n\n      <AppBar color=\"primary\" className={classes.appBar}>\n        <Toolbar></Toolbar>\n      </AppBar>\n    </React.Fragment>\n  );\n}\n","import { Switch } from 'react-router-dom';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { useEffect } from 'react';\nimport { Suspense, lazy } from 'react';\nimport Container from './components/Container';\nimport PrivateRoute from './components/PrivateRoute';\nimport PublicRoute from './components/PublicRoute';\nimport { authOperations, authSelectors } from './redux/auth';\nimport HeaderMUI from './components/HeaderMUI/HeaderMUI';\nimport BottomAppBar from './components/Footer/BottomAppBar';\nimport { createMuiTheme, ThemeProvider } from '@material-ui/core';\nimport { css } from '@emotion/react';\nimport ClockLoader from 'react-spinners/ClockLoader';\n\nconst HomePage = lazy(() => import('./pages/HomePage'));\nconst RegisterPage = lazy(() => import('./pages/RegisterPage'));\nconst LoginPage = lazy(() => import('./pages/LoginPage'));\nconst ContactsPage = lazy(() => import('./pages/ContactsPage'));\n\nconst theme = createMuiTheme({\n  palette: {\n    primary: {\n      main: '#011211',\n    },\n    secondary: {\n      main: '#faa346',\n    },\n  },\n});\n\nconst override = css`\n  display: block;\n  margin: 50px auto;\n  border-color: red;\n`;\n\nexport default function App() {\n  const dispatch = useDispatch();\n  const isFetchingCurrentUser = useSelector(authSelectors.getIsFetchingCurrent);\n  console.log(isFetchingCurrentUser);\n\n  useEffect(() => {\n    dispatch(authOperations.fetchCurrentUser());\n  }, [dispatch]);\n\n  return (\n    <Container>\n      {isFetchingCurrentUser ? (\n        <ClockLoader css={override} color={'#e8834d'} size={150} />\n      ) : (\n        <ThemeProvider theme={theme}>\n          <HeaderMUI />\n          <Switch>\n            <Suspense\n              fallback={\n                <ClockLoader css={override} color={'#e8834d'} size={150} />\n              }\n            >\n              <PublicRoute exact path=\"/\" component={HomePage} />\n              <PublicRoute\n                path=\"/register\"\n                component={RegisterPage}\n                redirectTo=\"/\"\n                restricted\n              />\n              <PublicRoute\n                path=\"/login\"\n                component={LoginPage}\n                redirectTo=\"/\"\n                restricted\n              />\n              <PrivateRoute\n                path=\"/contacts\"\n                component={ContactsPage}\n                redirectTo=\"/login\"\n              />\n            </Suspense>\n          </Switch>\n          <BottomAppBar />\n        </ThemeProvider>\n      )}\n    </Container>\n  );\n}\n","import { configureStore, getDefaultMiddleware } from '@reduxjs/toolkit';\nimport {\n  persistStore,\n  persistReducer,\n  FLUSH,\n  REHYDRATE,\n  PAUSE,\n  PERSIST,\n  PURGE,\n  REGISTER,\n} from 'redux-persist';\nimport logger from 'redux-logger';\nimport storage from 'redux-persist/lib/storage';\nimport { contactsReducer } from './contacts';\nimport { authReducer } from './auth';\n\nconst middleware = [\n  ...getDefaultMiddleware({\n    serializableCheck: {\n      ignoredActions: [FLUSH, REHYDRATE, PAUSE, PERSIST, PURGE, REGISTER],\n    },\n  }),\n  logger,\n];\n\nconst authPersistConfig = {\n  key: 'auth',\n  storage,\n  whitelist: ['token'],\n};\n\nexport const store = configureStore({\n  reducer: {\n    auth: persistReducer(authPersistConfig, authReducer),\n    contacts: contactsReducer,\n  },\n  middleware,\n  devTools: process.env.NODE_ENV === 'development',\n});\n\nexport const persistor = persistStore(store);\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { BrowserRouter } from 'react-router-dom';\nimport { Provider } from 'react-redux';\nimport { PersistGate } from 'redux-persist/integration/react';\nimport './index.css';\nimport App from './App';\nimport { store, persistor } from './redux/store';\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <PersistGate loading={null} persistor={persistor}>\n        <BrowserRouter>\n          <App />\n        </BrowserRouter>\n      </PersistGate>\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n","import { createSlice } from '@reduxjs/toolkit';\nimport authOperations from './auth-operations';\n\nconst initialState = {\n  user: { name: null, email: null },\n  token: null,\n  isLoggedIn: false,\n  isFetchingCurrentUser: false,\n};\n\nconst authSlice = createSlice({\n  name: 'auth',\n  initialState,\n  extraReducers: {\n    [authOperations.register.fulfilled](state, action) {\n      state.user = action.payload.user;\n      state.token = action.payload.token;\n      state.isLoggedIn = true;\n    },\n    [authOperations.logIn.fulfilled](state, action) {\n      state.user = action.payload.user;\n      state.token = action.payload.token;\n      state.isLoggedIn = true;\n    },\n    [authOperations.logOut.fulfilled](state, action) {\n      state.user = { name: null, email: null };\n      state.token = null;\n      state.isLoggedIn = false;\n    },\n    [authOperations.fetchCurrentUser.pending](state) {\n      state.isFetchingCurrentUser = true;\n    },\n    [authOperations.fetchCurrentUser.fulfilled](state, action) {\n      state.user = action.payload;\n      state.isLoggedIn = true;\n      state.isFetchingCurrentUser = false;\n    },\n    [authOperations.fetchCurrentUser.rejected](state) {\n      state.isFetchingCurrentUser = false;\n    },\n  },\n});\n\nexport default authSlice.reducer;\n","import axios from 'axios';\nimport { createAsyncThunk } from '@reduxjs/toolkit';\n\naxios.defaults.baseURL = 'https://goit-phonebook-api.herokuapp.com';\n\nconst token = {\n  set(token) {\n    axios.defaults.headers.common.Authorization = `Bearer ${token}`;\n  },\n  unset() {\n    axios.defaults.headers.common.Authorization = '';\n  },\n};\n\nconst register = createAsyncThunk(\n  'auth/register',\n  async (credentials, { rejectWithValue }) => {\n    try {\n      const { data } = await axios.post('/users/signup', credentials);\n      token.set(data.token);\n      return data;\n    } catch (error) {\n      return rejectWithValue(error.message);\n    }\n  },\n);\n\nconst logIn = createAsyncThunk(\n  'auth/login',\n  async (credentials, { rejectWithValue }) => {\n    try {\n      const { data } = await axios.post('/users/login', credentials);\n      token.set(data.token);\n      return data;\n    } catch (error) {\n      return rejectWithValue(error.message);\n    }\n  },\n);\n\nconst logOut = createAsyncThunk(\n  'auth/logout',\n  async (_, { rejectWithValue }) => {\n    try {\n      await axios.post('/users/logout');\n      token.unset();\n    } catch (error) {\n      return rejectWithValue(error.message);\n    }\n  },\n);\n\nconst fetchCurrentUser = createAsyncThunk(\n  'auth/refresh',\n  async (_, thunkAPI) => {\n    const state = thunkAPI.getState();\n    const persistedToken = state.auth.token;\n\n    if (persistedToken === null) {\n      return thunkAPI.rejectWithValue('need to log in');\n    }\n\n    token.set(persistedToken);\n    try {\n      const { data } = await axios.get('/users/current');\n      return data;\n    } catch (error) {\n      thunkAPI.rejectWithValue(error.message);\n    }\n  },\n);\n\nconst authOperations = {\n  register,\n  logOut,\n  logIn,\n  fetchCurrentUser,\n};\nexport default authOperations;\n","import { createAction } from '@reduxjs/toolkit';\n\nexport const fetchContactsRequest = createAction(\n  'contacts/fetchContactsRequest',\n);\nexport const fetchContactsSuccess = createAction(\n  'contacts/fetchContactsSuccess',\n);\nexport const fetchContactsError = createAction('contacts/fetchContactsError');\n\nexport const addContactRequest = createAction('contacts/addContactRequest');\nexport const addContactSuccess = createAction('contacts/addContactSuccess');\nexport const addContactError = createAction('contacts/addContactError');\n\nexport const deleteContactRequest = createAction(\n  'contacts/deleteContactRequest',\n);\nexport const deleteContactSuccess = createAction(\n  'contacts/deleteContactSuccess',\n);\nexport const deleteContactError = createAction('contacts/deleteContactError');\n\nexport const changeFilter = createAction('contacts/changeFilter');\n","import axios from 'axios';\nimport {\n  fetchContactsRequest,\n  fetchContactsSuccess,\n  fetchContactsError,\n  addContactRequest,\n  addContactSuccess,\n  addContactError,\n  deleteContactRequest,\n  deleteContactSuccess,\n  deleteContactError,\n} from './contacts-actions';\n\nconst fetchContacts = () => async dispatch => {\n  dispatch(fetchContactsRequest());\n  try {\n    const { data } = await axios.get('/contacts');\n    dispatch(fetchContactsSuccess(data));\n  } catch (error) {\n    dispatch(fetchContactsError(error));\n  }\n};\n\nconst addContact = (name, number) => async dispatch => {\n  const contact = {\n    name,\n    number,\n  };\n\n  dispatch(addContactRequest());\n\n  try {\n    const { data } = await axios.post('/contacts', contact);\n    dispatch(addContactSuccess(data));\n  } catch (error) {\n    dispatch(addContactError(error));\n  }\n};\n\nconst deleteContact = id => async dispatch => {\n  dispatch(deleteContactRequest());\n  try {\n    await axios.delete(`/contacts/${id}`);\n    dispatch(deleteContactSuccess(id));\n  } catch (error) {\n    dispatch(deleteContactError(error));\n  }\n};\n\nconst contactsOperations = {\n  fetchContacts,\n  addContact,\n  deleteContact,\n};\n\nexport default contactsOperations;\n","import { combineReducers } from 'redux';\nimport { createReducer } from '@reduxjs/toolkit';\nimport {\n  addContactSuccess,\n  deleteContactSuccess,\n  changeFilter,\n  fetchContactsSuccess,\n} from './contacts-actions';\n\nconst items = createReducer([], {\n  [fetchContactsSuccess]: (_, { payload }) => payload,\n  [addContactSuccess]: (state, { payload }) => [...state, payload],\n  [deleteContactSuccess]: (state, { payload }) =>\n    state.filter(({ id }) => id !== payload),\n});\n\nconst filter = createReducer('', {\n  [changeFilter]: (_, { payload }) => payload,\n});\n\nexport default combineReducers({\n  items,\n  filter,\n});\n","import { createSelector } from '@reduxjs/toolkit';\n\nconst getContacts = state => state.contacts.items;\nconst getFilter = state => state.contacts.filter;\n\nconst getVisibleContacts = createSelector(\n  [getContacts, getFilter],\n  (contacts, filter) => {\n    const getFilteredContacts = contacts => {\n      const normalizedFilter = filter.toLowerCase();\n      return contacts.filter(text =>\n        text.name.toLowerCase().includes(normalizedFilter),\n      );\n    };\n\n    return getFilteredContacts(contacts);\n  },\n);\n\nconst contactsSelectors = {\n  getContacts,\n  getFilter,\n  getVisibleContacts,\n};\n\nexport default contactsSelectors;\n","const getIsLoggedIn = state => state.auth.isLoggedIn;\nconst getUsername = state => state.auth.user.name;\nconst getIsFetchingCurrent = state => state.auth.isFetchingCurrentUser;\n\nconst authSelectors = {\n  getIsLoggedIn,\n  getUsername,\n  getIsFetchingCurrent,\n};\nexport default authSelectors;\n"],"sourceRoot":""}