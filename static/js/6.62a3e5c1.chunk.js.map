{"version":3,"sources":["lib/FormContainer.jsx","lib/Form.jsx","lib/Input.jsx","lib/PrimaryButton.jsx","components/ContactForm/ContactForm.module.css","components/ContactList/ContactList.module.css","App.module.css","redux/contacts/contacts-operations.js","redux/contacts/contacts-selectors.js","components/ContactForm/ContactForm.jsx","components/ContactList/ContactList.jsx","components/Filter/Filter.jsx","pages/ContactsPage.js"],"names":["useStyles","makeStyles","theme","root","marginTop","spacing","display","flexDirection","alignItems","marginBottom","FormContainer","children","props","styles","className","component","maxWidth","width","Form","noValidate","Input","forwardRef","ref","variant","margin","inputRef","fullWidth","color","background","boxShadow","PrimaryButton","type","module","exports","contactsOperations","fetchContacts","dispatch","a","fetchContactsRequest","axios","get","data","fetchContactsSuccess","fetchContactsError","addContact","name","number","contact","addContactRequest","post","addContactSuccess","addContactError","deleteContact","id","deleteContactRequest","delete","deleteContactSuccess","deleteContactError","getContacts","state","contacts","items","getFilter","filter","getVisibleContacts","createSelector","toLowerCase","includes","getFilteredContacts","schema","yup","shape","matches","required","ContactForm","useState","setNumber","useSelector","useDispatch","useForm","mode","resolver","yupResolver","register","errors","onSubmit","evt","find","alert","target","reset","autoComplete","css","input","label","value","error","helperText","message","inputMode","customInput","format","onChange","currentTarget","startIcon","ContactList","useEffect","onDeleteContact","closest","dataset","map","contactListItem","data-id","listItemContainer","Button","fontSize","onClick","searchInput","opacity","backgroundColor","borderRadius","marginRight","Filter","InputBase","startAdornment","placeholder","contactsActions","ContactsPage","container"],"mappings":"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","file":"static/js/6.62a3e5c1.chunk.js","sourcesContent":["import React from 'react';\nimport Container from '@material-ui/core/Container';\nimport { makeStyles } from '@material-ui/core/styles';\n\nconst useStyles = makeStyles(theme => ({\n  root: {\n    marginTop: theme.spacing(2),\n    display: 'flex',\n    flexDirection: 'column',\n    alignItems: 'center',\n    marginBottom: 'auto',\n  },\n}));\n\nconst FormContainer = ({ children, ...props }) => {\n  const styles = useStyles();\n\n  return (\n    <Container\n      className={styles.root}\n      component=\"main\"\n      maxWidth=\"xs\"\n      {...props}\n    >\n      {children}\n    </Container>\n  );\n};\n\nexport default FormContainer;\n","import React from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\n\nconst useStyles = makeStyles(theme => ({\n  root: { width: '100%', marginTop: theme.spacing(1) },\n}));\n\nconst Form = ({ children, ...props }) => {\n  const styles = useStyles();\n\n  return (\n    <form className={styles.root} noValidate {...props}>\n      {children}\n    </form>\n  );\n};\n\nexport default Form;\n","import React, { forwardRef } from 'react';\nimport { TextField } from '@material-ui/core';\n\nconst Input = forwardRef((props, ref) => {\n  return (\n    <TextField\n      variant=\"outlined\"\n      margin=\"normal\"\n      inputRef={ref}\n      fullWidth\n      color=\"secondary\"\n      {...props}\n    />\n  );\n});\n\nexport default Input;\n","import React from 'react';\nimport Button from '@material-ui/core/Button';\nimport { makeStyles } from '@material-ui/core/styles';\n\nconst useStyles = makeStyles(theme => ({\n  root: {\n    margin: theme.spacing(3, 0, 2),\n    background: 'linear-gradient(45deg, #FE6B8B 30%, #FF8E53 90%)',\n    boxShadow: '0 3px 5px 2px rgba(255, 105, 135, .3)',\n  },\n}));\n\nconst PrimaryButton = ({ children, ...props }) => {\n  const styles = useStyles();\n\n  return (\n    <Button\n      type=\"submit\"\n      fullWidth\n      variant=\"contained\"\n      className={styles.root}\n      {...props}\n    >\n      {children}\n    </Button>\n  );\n};\n\nexport default PrimaryButton;\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"form\":\"ContactForm_form__1Qiby\",\"label\":\"ContactForm_label__3-QLS\",\"input\":\"ContactForm_input__2cUbt\",\"btn\":\"ContactForm_btn__8-e4k\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"contactListItem\":\"ContactList_contactListItem__3cZlV\",\"listItemContainer\":\"ContactList_listItemContainer__30kpf\",\"btn\":\"ContactList_btn__2I0RK\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"App\":\"App_App__3pqQ2\",\"App-header\":\"App_App-header__1sBHv\",\"App-link\":\"App_App-link__3H1Wg\",\"container\":\"App_container__2aVgn\"};","import axios from 'axios';\nimport {\n  fetchContactsRequest,\n  fetchContactsSuccess,\n  fetchContactsError,\n  addContactRequest,\n  addContactSuccess,\n  addContactError,\n  deleteContactRequest,\n  deleteContactSuccess,\n  deleteContactError,\n} from './contacts-actions';\n\nconst fetchContacts = () => async dispatch => {\n  dispatch(fetchContactsRequest());\n  try {\n    const { data } = await axios.get('/contacts');\n    dispatch(fetchContactsSuccess(data));\n  } catch (error) {\n    dispatch(fetchContactsError(error));\n  }\n};\n\nconst addContact = (name, number) => async dispatch => {\n  const contact = {\n    name,\n    number,\n  };\n\n  dispatch(addContactRequest());\n\n  try {\n    const { data } = await axios.post('/contacts', contact);\n    dispatch(addContactSuccess(data));\n  } catch (error) {\n    dispatch(addContactError(error));\n  }\n};\n\nconst deleteContact = id => async dispatch => {\n  dispatch(deleteContactRequest());\n\n  try {\n    await axios.delete(`/contacts/${id}`);\n    dispatch(deleteContactSuccess(id));\n  } catch (error) {\n    dispatch(deleteContactError(error));\n  }\n};\n\nconst contactsOperations = {\n  fetchContacts,\n  addContact,\n  deleteContact,\n};\nexport default contactsOperations;\n","import { createSelector } from '@reduxjs/toolkit';\n\nexport const getContacts = state => state.contacts.items;\nexport const getFilter = state => state.contacts.filter;\n\nexport const getVisibleContacts = createSelector(\n  [getContacts, getFilter],\n  (contacts, filter) => {\n    const getFilteredContacts = contacts =>\n      contacts.filter(contact =>\n        contact.name.toLowerCase().includes(filter.toLowerCase()),\n      );\n\n    return getFilteredContacts(contacts);\n  },\n);\n","import React, { useState } from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\nimport contactsOperations from '../../redux/contacts/contacts-operations';\nimport { getContacts } from '../../redux/contacts/contacts-selectors';\nimport FormContainer from '../../lib/FormContainer';\nimport Form from '../../lib/Form';\nimport Input from '../../lib/Input';\nimport PrimaryButton from '../../lib/PrimaryButton';\n\nimport { useForm } from 'react-hook-form';\nimport { yupResolver } from '@hookform/resolvers/yup';\nimport * as yup from 'yup';\nimport NumberFormat from 'react-number-format';\nimport PersonAddIcon from '@material-ui/icons/PersonAdd';\nimport css from './ContactForm.module.css';\n\nconst schema = yup.object().shape({\n  name: yup\n    .string()\n    .matches(/^([^0-9]*)$/, 'Name should not contain numbers')\n    .required('First name is a required field'),\n  number: yup.string().required('Phone number is a required field'),\n});\n\nexport default function ContactForm() {\n  // eslint-disable-next-line\n  const [name, setName] = useState('');\n  const [number, setNumber] = useState('');\n\n  const contacts = useSelector(getContacts);\n  const dispatch = useDispatch();\n\n  const handleChange = evt => {\n    const { value } = evt.currentTarget;\n    setNumber(value);\n  };\n\n  const { register, errors } = useForm({\n    mode: 'onBlur',\n    resolver: yupResolver(schema),\n  });\n\n  const handleFormSubmit = evt => {\n    if (contacts.find(contact => contact.name === name)) {\n      alert(`${name} is already exists!`);\n      return;\n    }\n    dispatch(contactsOperations.addContact(name, number));\n    evt.target.reset();\n    setNumber('');\n  };\n\n  return (\n    <FormContainer>\n      {' '}\n      <Form onSubmit={handleFormSubmit}>\n        <Input\n          autoComplete=\"off\"\n          className={css.input}\n          type=\"text\"\n          // placeholder=\"Enter name\"\n          name=\"name\"\n          label=\"Name\"\n          value={name}\n          error={!!errors.name}\n          helperText={errors?.name?.message}\n          ref={register}\n          // onChange={handleChange}\n          // required\n        />\n\n        <NumberFormat\n          autoComplete=\"off\"\n          className={css.input}\n          type=\"tel\"\n          label=\"Phone number 0XX XXX XX XX\"\n          inputMode=\"numeric\"\n          // placeholder=\"Enter number\"\n          name=\"number\"\n          error={!!errors.number}\n          helperText={errors?.number?.message}\n          inputRef={register}\n          customInput={Input}\n          format=\"+38 (###) ### ## ##\"\n          value={number}\n          onChange={handleChange}\n          // required\n        />\n        <PrimaryButton\n          startIcon={<PersonAddIcon />}\n          type=\"submit\"\n          color=\"primary\"\n          reset\n        >\n          Add contact\n        </PrimaryButton>\n      </Form>\n    </FormContainer>\n  );\n}\n","import React, { useEffect } from 'react';\nimport PropTypes from 'prop-types';\nimport { useSelector, useDispatch } from 'react-redux';\nimport contactsOperations from '../../redux/contacts/contacts-operations';\nimport { getVisibleContacts } from '../../redux/contacts/contacts-selectors';\n\nimport Button from '@material-ui/core/Button';\nimport DeleteIcon from '@material-ui/icons/Delete';\nimport { makeStyles } from '@material-ui/core/styles';\nimport css from './ContactList.module.css';\n\nconst useStyles = makeStyles(theme => ({\n  root: {\n    margin: theme.spacing(1, 0, 1),\n    background: 'linear-gradient(45deg, #FE6B8B 30%, #FF8E53 90%)',\n    boxShadow: '0 3px 5px 2px rgba(255, 105, 135, .3)',\n    color: 'white',\n  },\n}));\n\nexport default function ContactList() {\n  const styles = useStyles();\n  const dispatch = useDispatch();\n\n  useEffect(() => {\n    dispatch(contactsOperations.fetchContacts());\n  }, [dispatch]);\n\n  const contacts = useSelector(getVisibleContacts);\n\n  const onDeleteContact = evt =>\n    dispatch(\n      contactsOperations.deleteContact(\n        evt.target.closest('[data-id]').dataset.id,\n      ),\n    );\n\n  return (\n    <ul>\n      {contacts.map(({ id, name, number }) => (\n        <li className={css.contactListItem} key={id} data-id={id}>\n          <div className={css.listItemContainer}>\n            <p>\n              {name}: <span>{number}</span>\n            </p>\n            <Button\n              startIcon={<DeleteIcon fontSize=\"small\" color=\"white\" />}\n              className={styles.root}\n              type=\"button\"\n              onClick={onDeleteContact}\n            >\n              Delete\n            </Button>\n          </div>\n        </li>\n      ))}\n    </ul>\n  );\n}\n\nContactList.propTypes = {\n  onDeleteContact: PropTypes.func,\n  contacts: PropTypes.array,\n  id: PropTypes.string,\n  name: PropTypes.string,\n  number: PropTypes.string,\n};\n","import React from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { getFilter } from '../../redux/contacts/contacts-selectors';\nimport * as contactsActions from '../../redux/contacts/contacts-actions';\nimport FormContainer from '../../lib/FormContainer';\nimport PropTypes from 'prop-types';\n\nimport InputBase from '@material-ui/core/InputBase';\nimport SearchIcon from '@material-ui/icons/Search';\nimport { makeStyles } from '@material-ui/core/styles';\n\nconst useStyles = makeStyles({\n  root: {},\n  searchInput: {\n    opacity: '0.9',\n    '&:hover': {\n      backgroundColor: '#fff',\n      borderRadius: '5px',\n      boxShadow: '1px 1px 10px 1px rgba(241,132,98,1)',\n    },\n    '& .MuiSvgIcon-root': {\n      marginRight: '8px',\n    },\n  },\n});\n\nconst Filter = () => {\n  const styles = useStyles();\n  const value = useSelector(getFilter);\n  const dispatch = useDispatch();\n\n  return (\n    <FormContainer>\n      <InputBase\n        autoComplete=\"off\"\n        className={styles.searchInput}\n        startAdornment={<SearchIcon fontSize=\"small\" color=\"secondary\" />}\n        type=\"text\"\n        placeholder=\"Enter contact name\"\n        value={value}\n        onChange={evt =>\n          dispatch(contactsActions.changeFilter(evt.target.value))\n        }\n      />\n    </FormContainer>\n  );\n};\n\nFilter.propTypes = {\n  value: PropTypes.string,\n  onChange: PropTypes.func,\n};\n\nexport default Filter;\n","import React from 'react';\nimport ContactForm from '../components/ContactForm/ContactForm';\nimport ContactList from '../components/ContactList/ContactList';\nimport Filter from '../components/Filter/Filter';\nimport css from '../App.module.css';\n\nexport default function ContactsPage() {\n  return (\n    <div className={css.container}>\n      <h1>Phonebook</h1>\n      <ContactForm />\n\n      <h2>Contacts</h2>\n      <Filter />\n      <ContactList />\n    </div>\n  );\n}\n"],"sourceRoot":""}